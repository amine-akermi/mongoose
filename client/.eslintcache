[{"C:\\Users\\21650\\Desktop\\contact\\client\\src\\index.js":"1","C:\\Users\\21650\\Desktop\\contact\\client\\src\\App.js":"2","C:\\Users\\21650\\Desktop\\contact\\client\\src\\reportWebVitals.js":"3","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\store\\store.js":"4","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\actions\\contactEditActions.js":"5","C:\\Users\\21650\\Desktop\\contact\\client\\src\\components\\UserCard.js":"6","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\actions\\contactActions.js":"7","C:\\Users\\21650\\Desktop\\contact\\client\\src\\components\\AddUser.js":"8","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\constants\\contactActionTypes.js":"9","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\constants\\contactEditActionTypes.js":"10","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\index.js":"11","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\contactEditReducer.js":"12","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\contactReducer.js":"13"},{"size":588,"mtime":1607370636733,"results":"14","hashOfConfig":"15"},{"size":1927,"mtime":1607370636687,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607370636754,"results":"17","hashOfConfig":"15"},{"size":372,"mtime":1607434812476,"results":"18","hashOfConfig":"15"},{"size":245,"mtime":1607370636235,"results":"19","hashOfConfig":"15"},{"size":2647,"mtime":1607370636110,"results":"20","hashOfConfig":"15"},{"size":1610,"mtime":1607370636155,"results":"21","hashOfConfig":"15"},{"size":3694,"mtime":1607370636008,"results":"22","hashOfConfig":"15"},{"size":401,"mtime":1607370636265,"results":"23","hashOfConfig":"15"},{"size":141,"mtime":1607370636282,"results":"24","hashOfConfig":"15"},{"size":261,"mtime":1607370636351,"results":"25","hashOfConfig":"15"},{"size":440,"mtime":1607370636314,"results":"26","hashOfConfig":"15"},{"size":862,"mtime":1607370636333,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"b81j1c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\21650\\Desktop\\contact\\client\\src\\index.js",[],["59","60"],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\App.js",["61"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport { Link, Route } from \"react-router-dom\";\nimport UserCard from \"./components/UserCard\";\nimport AddUser from \"./components/AddUser\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"./JS/actions/contactActions\";\nimport { toggleFalse } from \"./JS/actions/contactEditActions\";\nfunction App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contactReducer.contacts);\n  const loadContacts = useSelector(\n    (state) => state.contactReducer.loadContacts\n  );\n  \n  useEffect(() => {\n    dispatch(getContacts());\n  }, []);\n  return (\n    <div className=\"App\">\n      <div>\n        <Link to=\"/Contact_list\">\n          <Button\n            variant=\"outline-primary button\"\n            onClick={() => dispatch(getContacts())}\n          >\n            Contact List\n          </Button>\n        </Link>\n        <Link to=\"/Add_Contact\">\n          <Button\n            variant=\"primary button\"\n            onClick={() => dispatch(toggleFalse())}\n          >\n            Add Contact\n          </Button>\n        </Link>\n      </div>\n\n      <div>\n        <Route\n          path=\"/Contact_list\"\n          render={() => (\n            <div className=\"contact-list\">\n              {loadContacts ? (\n                <div\n                  className=\"spinner-border text-primary\"\n                  style={{ width: \"3rem\", height: \"3rem\" }}\n                  role=\"status\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              ) : (\n                contacts.map((el) => <UserCard key={el._id} contact={el} />)\n              )}\n            </div>\n          )}\n        />\n        <Route path=\"/(Add_Contact|Edit_Contact)/\" render={() => <AddUser />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\21650\\Desktop\\contact\\client\\src\\reportWebVitals.js",[],["62","63"],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\store\\store.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\actions\\contactEditActions.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\components\\UserCard.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\actions\\contactActions.js",["64","65"],"//Importations des actions\nimport {\n  GET_CONTACTS_SUCCESS,\n  GET_CONTACTS_FAIL,\n  GET_CONTACTS_LOAD,\n  GET_CONTACT,\n  EDIT_CONTACT,\n} from \"../constants/contactActionTypes\";\nimport axios from \"axios\";\n//Action function definition\n\n//Get all contacts\nexport const getContacts = () => async (dispatch) => {\n  dispatch({ type: GET_CONTACTS_LOAD });\n  try {\n    let result = await axios.get(\"/api/contact\");\n    dispatch({ type: GET_CONTACTS_SUCCESS, payload: result.data.response });\n  } catch (e) {\n    dispatch({ type: GET_CONTACTS_FAIL, payload: e.message });\n  }\n};\n\n//Delete a contact by id\n\nexport const deleteContact = (id) => async (dispatch) => {\n  try {\n    let result = await axios.delete(`/api/contact/${id}`);\n    dispatch(getContacts());\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\n//Get contact by id\n\nexport const getContact = (id) => async (dispatch) => {\n  try {\n    let result = await axios.get(`/api/contact/${id}`);\n    dispatch({ type: GET_CONTACT, payload: result.data.response });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\n//Post a contact\n\nexport const postContact = ( user) => async (dispatch) => {\n  try {\n    let result = await axios.post('/api/contact/', user);\n    dispatch(getContacts());\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n //Edit an existing contact\n\n export const editContact =(id,user)=>async(dispatch)=>{\n   try {\n     let result= await axios.put(`/api/contact/${id}`,user);\n     dispatch({type:EDIT_CONTACT,payload:result.data.message});\n     dispatch(getContacts());\n   \n   } catch (e) {\n    dispatch({type:EDIT_CONTACT,payload:e});\n   }\n }","C:\\Users\\21650\\Desktop\\contact\\client\\src\\components\\AddUser.js",["66"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { editContact, postContact } from \"../JS/actions/contactActions\";\nconst AddUser = () => {\n  const dispatch = useDispatch();\n  const [newContact, setNewContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const userReducer = useSelector((state) => state.contactReducer.user);\n  const editUser = useSelector((state) => state.contactEditReducer.edit);\n  const isUpdated = useSelector((state) => state.contactReducer.isUpdated);\n\n  useEffect(() => {\n    editUser\n      ? setNewContact(userReducer)\n      : setNewContact({ name: \"\", email: \"\", phone: \"\" });\n  }, [editUser, userReducer]);\n  const handleChange = (e) => {\n    e.preventDefault();\n    setNewContact({ ...newContact, [e.target.name]: e.target.value });\n  };\n  const handleContact = () => {\n    if (!editUser) {\n      dispatch(postContact(newContact));\n    } else {\n      dispatch(editContact(userReducer._id, newContact));\n    }\n  };\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Card\n        style={{\n          width: \"22rem\",\n          height: \"25rem\",\n          marginRight: \"30px\",\n          marginBottom: \"20px\",\n          marginTop: \"30px\",\n          backgroundColor: \"white\",\n          borderRadius: \"8px\",\n          border: \"transparent\",\n          boxShadow: \"0 10px 10px 0 rgba(0,0,0,0.2)\",\n        }}\n      >\n        <Card.Header\n          style={{\n            borderTopRightRadius: \"8px\",\n            borderTopLeftRadius: \"8px\",\n            backgroundColor: \"#277fa5\",\n            color: \"white\",\n          }}\n        >\n          {editUser ? \"Edit Contact\" : \"Add Contact\"}\n        </Card.Header>\n\n        <Card.Body>\n          <Form>\n            <Form.Group\n              controlId=\"formBasicEmail\"\n              style={{ textAlign: \"left\" }}\n            >\n              <Form.Label>name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={newContact.name}\n                name=\"name\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"formBasicEmail\"\n              style={{ textAlign: \"left\" }}\n            >\n              <Form.Label>email :</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                value={newContact.email}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"formBasicEmail\"\n              style={{ textAlign: \"left\" }}\n            >\n              <Form.Label>Phone :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter phone number\"\n                name=\"phone\"\n                value={newContact.phone}\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Form>\n        </Card.Body>\n        <div className=\"buttons\">\n          <Link to=\"/Contact_list\">\n            <Button\n              variant=\"outline-primary edit-button\"\n              type=\"submit\"\n              onClick={() => handleContact()}\n            >\n              {editUser ? \"Submit\" : \"Add\"}\n            </Button>\n          </Link>\n          <Link to=\"/Contact_list\">\n            <Button variant=\"outline-danger edit-button\">Cancel</Button>\n          </Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUser;\n","C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\constants\\contactActionTypes.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\constants\\contactEditActionTypes.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\index.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\contactEditReducer.js",[],"C:\\Users\\21650\\Desktop\\contact\\client\\src\\JS\\reducers\\contactReducer.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":12},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"71","severity":1,"message":"77","line":27,"column":9,"nodeType":"73","messageId":"74","endLine":27,"endColumn":15},{"ruleId":"71","severity":1,"message":"77","line":49,"column":9,"nodeType":"73","messageId":"74","endLine":49,"endColumn":15},{"ruleId":"71","severity":1,"message":"78","line":15,"column":9,"nodeType":"73","messageId":"74","endLine":15,"endColumn":18},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["79"],["80"],"'result' is assigned a value but never used.","'isUpdated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]